{"version":3,"sources":["components/TableDisplay.js","components/TableSelector.js","components/NAVBar.js","components/TitleBar.js","App.js","serviceWorker.js","index.js","components/StaticFiles/cda_srt_p3_tool_v.csv","components/StaticFiles/cda_srt_p3_tool_model_v.csv","components/StaticFiles/cda_ipd_p3_5p_v.csv"],"names":["TableDisplay","props","Object","keys","this","ProductPlatformView","length","ViewCategory","data","DisplayData","version","pagination","row","rowSpan","dataField","isKey","PltfrmNmList","map","elem","index","colSpan","className","datalkp","PltfrmTypList","ProductModelView","PltfrmModelList","PltfrmSubModelList","PltfrmColumnList","split","InsightView","Component","TableSelector","TableDisplayData","firmname","viewcategory","radiobutton","FirmFilteredData","_","srt_p3_tool","FIRM","INVESTMENT_TYPE","PLATFORM_NAME_LIST","PLATFORM_TYPE_LIST","STRATEGY_LIST","PLATFORM_NAME","STRATEGY","PLATFORM_TYPE","push","trim","obj","Data","ProductPlatformViewObj","StrtgyList","SelectedCategory","obj_data","innerelem","srt_p3_model","FIRM_NAME","PRODUCT_TYPE","ModelNameList","SubModelList","StrategyList","TickerList","StategyTickerList","columnlist","MODEL_NAME","TICKER","STRATEGY_NAME","SUB_MODEL","e","splitword","innerlist","SUB_MODEL_NAME","ProductPlatformModelObj","PltfrmStrategyList","PltformTickerList","PltfrmStrategyTickerList","rowobj","innermostelem","row_data","undefined","Math","floor","ALLOCATION_PCT","srt_p3_5p","P3_FIRM_NAME_FINAL","OPPORTUNITY_TYPE","OPPORTUNITY_NAME","INSIGHT_ORDER","INSIGHTS","state","PlatformInd","ModelInd","InsightInd","SelectedFirm","SelectedRadioButton","prevProps","setState","OutputTable","target","value","asofdate","substring","DisplayRadioButton","id","onClick","clickHandler","NAVBar","RadioButtonSelection","contactdisplay","DropDownList","NAM_NAME","IPD_NAME","SelectDropDown","firm","key","indicator","RadioButtonSelectionDisplayInd","ASOFDATE","console","log","RadioButtonChange","event","handleFirmChange","srtcontact","srtcontactchange","srtcontactname","onChange","bval","type","checked","TitleBar","drpdwnList","Promise","all","d3","p3_tool","p3_model","p3_5p","res","drpdwn","uniqdrpdwn","sort","loaded","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.2849cb7e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport * as d3 from 'd3';\r\nimport {BootstrapTable,TableHeaderColumn} from 'react-bootstrap-table'\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\n\r\n\r\n\r\nclass TableDisplay extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        \r\n\r\n        \r\n        \r\n    }\r\n/*\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        \r\n        if (this.props.SelectedFirm != prevProps.SelectedFirm) {\r\n          \r\n          this.setState({SelectedFirm: this.props.SelectedFirm,ProductPlatformView:this.props.ProductPlatformView})\r\n        }\r\n      }\r\n*/\r\n    \r\n\r\n\r\n    render() {\r\n        \r\n        if (Object.keys(this.props.ProductPlatformView).length>0  && this.props.ViewCategory=='Products by Platform'){\r\n            //console.log(this.props.ProductPlatformView.PltfrmNmList)\r\n            return (\r\n            \r\n            <div>\r\n               <BootstrapTable data={this.props.ProductPlatformView.DisplayData} version='4' pagination>\r\n                \r\n                    <TableHeaderColumn row='0' rowSpan='2' dataField='Strategy' isKey>Strategy</TableHeaderColumn>\r\n                    \r\n                    {this.props.ProductPlatformView.PltfrmNmList.map((elem,index)=>{\r\n                                //console.log(this.props.ProductPlatformView.PltfrmNmList)\r\n                                    return (\r\n                                    \r\n                                            <TableHeaderColumn row='0' colSpan='1' className=\"Header\">{this.props.ProductPlatformView.PltfrmNmList[index]}</TableHeaderColumn>\r\n                                            \r\n                                    \r\n                                        )}       \r\n                                    )\r\n                  }\r\n                    {this.props.ProductPlatformView.PltfrmNmList.map((elem,index)=>{\r\n                                const datalkp=this.props.ProductPlatformView.PltfrmNmList[index]+\" \"+this.props.ProductPlatformView.PltfrmTypList[index]\r\n                                //this.props.ProductPlatformView.DisplayData\r\n                                \r\n                             return (\r\n              \r\n                        \r\n                                    <TableHeaderColumn row='1' dataField={datalkp}>{this.props.ProductPlatformView.PltfrmTypList[index]}</TableHeaderColumn>\r\n              \r\n                                     )}\r\n                             )\r\n                    }\r\n               </BootstrapTable>\r\n        \r\n            </div>\r\n        )\r\n        }\r\n        else if (Object.keys(this.props.ProductModelView).length>0  && this.props.ViewCategory=='Products by Model'){\r\n               // console.log(this.props.ProductModelView)\r\n            return (\r\n            \r\n                <div>\r\n                     <BootstrapTable data={this.props.ProductModelView.DisplayData} version='4' pagination>\r\n                    \r\n                    <TableHeaderColumn row='0' rowSpan='2' dataField='Strategy' isKey>Strategy</TableHeaderColumn>\r\n                    <TableHeaderColumn row='0' rowSpan='2' dataField='Ticker' >Ticker</TableHeaderColumn>\r\n                    \r\n                    {this.props.ProductModelView.PltfrmModelList.map((elem,index)=>{\r\n                                //console.log(this.props.ProductPlatformView.PltfrmNmList)\r\n                               \r\n                                    return (\r\n                                    \r\n                                        \r\n                                            <TableHeaderColumn row=\"0\" colSpan={this.props.ProductModelView.PltfrmSubModelList[elem].length} className=\"Header\">\r\n                                                {elem}\r\n                                            </TableHeaderColumn>\r\n                                            \r\n                                    \r\n                                        )}       \r\n                                    )\r\n                  }\r\n                   {this.props.ProductModelView.PltfrmColumnList.map((elem,index)=>{\r\n                                let datalkp=elem.split(\"|\")[0];\r\n                           \r\n                                    \r\n\r\n                                    return (\r\n              \r\n                        \r\n                                        <TableHeaderColumn row=\"1\" dataField={datalkp}>{elem.split(\"|\")[1]}</TableHeaderColumn>\r\n                  \r\n                                         )\r\n                                 \r\n                                })\r\n                             \r\n                    }\r\n                   \r\n               </BootstrapTable>\r\n                   \r\n                   \r\n            \r\n                </div>\r\n            )\r\n\r\n        }\r\n        else if(Object.keys(this.props.InsightView).length>0  && this.props.ViewCategory=='5P Insights'){\r\n                \r\n        return (<div>\r\n                    \r\n                    <BootstrapTable data={this.props.InsightView.DisplayData}  pagination>\r\n                        <TableHeaderColumn dataField='OPPORTUNITY_TYPE' isKey>OPPORTUNITY_TYPE</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='OPPORTUNITY_NAME' >OPPORTUNITY_NAME</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='INSIGHT_ORDER'>INSIGHT_ORDER</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='INSIGHTS'>INSIGHTS</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n            </div>\r\n                )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <h1>No Data Exists for Selected Criteria</h1>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default TableDisplay;","import React, { Component } from 'react';\r\nimport './CustomStylesheet.css';\r\n//import TableDisplay from './TableDisplay';\r\nimport * as _ from 'underscore';\r\nimport TableDisplay from './TableDisplay';\r\nimport {BootstrapTable,TableHeaderColumn} from 'react-bootstrap-table'\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\n\r\n\r\nclass TableSelector extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            \r\n            ViewCategory: 'Products by Platform',\r\n            PlatformInd: true,\r\n            ModelInd:false,\r\n            InsightInd:false,\r\n            ProductPlatformView: this.TableDisplayData(this.props.SelectedFirm,'Products by Platform',this.props.SelectedRadioButton),\r\n            ProductModelView: {},\r\n            InsightView:{}\r\n        }\r\n        \r\n\r\n    }\r\n     \r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n       \r\n    if (this.props.SelectedFirm != prevProps.SelectedFirm || this.props.SelectedRadioButton != prevProps.SelectedRadioButton ){\r\n        \r\n    //if (obj.SelectedCategory != prevProps.SelectedFirm ){\r\n          const obj=this.TableDisplayData(this.props.SelectedFirm,this.state.ViewCategory,this.props.SelectedRadioButton)\r\n          \r\n          if(this.state.ViewCategory=='Products by Platform'){\r\n                this.setState({ProductPlatformView:obj})\r\n          }\r\n          else if(this.state.ViewCategory=='Products by Model'){\r\n            this.setState({ProductModelView:obj})\r\n          }\r\n          else{\r\n            this.setState({InsightView:obj})\r\n          }\r\n        }\r\n      }\r\n      \r\n    \r\n    TableDisplayData=(firmname,viewcategory,radiobutton)=>{\r\n        \r\n        \r\n        \r\n        if(viewcategory=='Products by Platform' ){\r\n            let FirmFilteredData=[]\r\n            \r\n            if(radiobutton==\"All\"){\r\n                 FirmFilteredData=_.where(this.props.srt_p3_tool,{FIRM:firmname})\r\n            }\r\n            else{\r\n                FirmFilteredData=_.where(this.props.srt_p3_tool,{FIRM:firmname,INVESTMENT_TYPE:radiobutton})\r\n            }\r\n            \r\n            if(FirmFilteredData.length>0){\r\n            \r\n            let PLATFORM_NAME_LIST=[];\r\n            let PLATFORM_TYPE_LIST=[];\r\n            let STRATEGY_LIST=[];\r\n            FirmFilteredData.map((elem)=>\r\n                    {\r\n                       const {PLATFORM_NAME,PLATFORM_TYPE,STRATEGY} =elem;\r\n                       PLATFORM_NAME_LIST.push(PLATFORM_NAME.trim());\r\n                       STRATEGY_LIST.push(STRATEGY.trim());\r\n                    }\r\n            )\r\n            _.uniq(PLATFORM_NAME_LIST).map((elem)=>{\r\n                  const obj= _.find(FirmFilteredData,{PLATFORM_NAME:elem})\r\n                  PLATFORM_TYPE_LIST.push(obj.PLATFORM_TYPE)\r\n            })\r\n\r\n\r\n    \r\n            let Data=[];\r\n            let ProductPlatformViewObj={                                  \r\n                PltfrmNmList: _.uniq(PLATFORM_NAME_LIST),\r\n                PltfrmTypList : PLATFORM_TYPE_LIST,\r\n                StrtgyList : _.uniq(STRATEGY_LIST),\r\n                SelectedCategory: firmname+viewcategory\r\n            }\r\n            ProductPlatformViewObj.StrtgyList.map((elem)=>{\r\n                \r\n                let obj_data={ 'Strategy' : elem}\r\n\r\n                ProductPlatformViewObj.PltfrmNmList.map((innerelem,index)=>{\r\n                    const col_data=_.where(FirmFilteredData,\r\n                                {STRATEGY:elem,PLATFORM_NAME:innerelem,PLATFORM_TYPE:ProductPlatformViewObj.PltfrmTypList[index]})\r\n                                \r\n                    if(col_data.length>0){\r\n                        obj_data[innerelem+\" \"+ProductPlatformViewObj.PltfrmTypList[index]]=true\r\n                        //obj_data[index]=true\r\n                        //obj_data[innerelem]=true\r\n                        \r\n                    }\r\n                    else{\r\n                        obj_data[innerelem+\" \"+ProductPlatformViewObj.PltfrmTypList[index]]=false\r\n                       // obj_data[index]=false\r\n                      // obj_data[innerelem]=false\r\n                        \r\n                    }\r\n                })\r\n              \r\n              Data.push(obj_data);\r\n\r\n            });\r\n\r\n            ProductPlatformViewObj.DisplayData=Data\r\n\r\n            \r\n\r\n            return ProductPlatformViewObj\r\n            }else{\r\n                return {}\r\n            } \r\n            \r\n        }\r\n        else if(viewcategory=='Products by Model' ){\r\n            let FirmFilteredData;\r\n            if(radiobutton==\"All\"){\r\n                FirmFilteredData=_.where(this.props.srt_p3_model,{FIRM_NAME:firmname})\r\n           }\r\n           else{\r\n               FirmFilteredData=_.where(this.props.srt_p3_model,{FIRM_NAME:firmname,PRODUCT_TYPE:radiobutton})\r\n           }\r\n            \r\n            if(FirmFilteredData.length>0){\r\n               \r\n            \r\n                let ModelNameList=[];\r\n                let SubModelList={};\r\n                let StrategyList=[];\r\n                let TickerList=[];\r\n                let StategyTickerList=[];\r\n                let columnlist=[];\r\n                FirmFilteredData.map((elem)=>\r\n                {\r\n                   const {MODEL_NAME,TICKER,STRATEGY_NAME,SUB_MODEL} =elem;\r\n                   \r\n                   StategyTickerList.push(STRATEGY_NAME.trim()+\"|\"+TICKER.trim());\r\n                   ModelNameList.push(MODEL_NAME.trim());\r\n                })\r\n\r\n\r\n                _.uniq(StategyTickerList).map((e)=>{\r\n                   const splitword= e.split('|')\r\n                   StrategyList.push(splitword[0]);\r\n                   TickerList.push(splitword[1]);\r\n\r\n                })\r\n\r\n                _.uniq(ModelNameList).map((elem)=>{\r\n                    const obj= _.where(FirmFilteredData,{MODEL_NAME:elem})\r\n                    let innerlist=[]\r\n                    obj.map((innerelem)=>{\r\n                        const {SUB_MODEL_NAME}=innerelem;\r\n                        innerlist.push(SUB_MODEL_NAME);\r\n                    })\r\n                    SubModelList[elem]=_.uniq(innerlist)\r\n              })\r\n              Object.keys(SubModelList).map((elem,index)=>{\r\n                SubModelList[elem].map((innerelem)=>{\r\n                        let indexfinal=index+1\r\n                        columnlist.push(elem+\" \"+innerelem+\"|\"+innerelem)\r\n                     })\r\n              })\r\n              let ProductPlatformModelObj={                                  \r\n                PltfrmModelList:  _.uniq(ModelNameList),\r\n                PltfrmSubModelList: SubModelList,\r\n                PltfrmStrategyList : StrategyList,\r\n                PltformTickerList : TickerList,\r\n                PltfrmStrategyTickerList:  _.uniq(StategyTickerList), \r\n                PltfrmColumnList:columnlist,\r\n                SelectedCategory: firmname+viewcategory\r\n             }\r\n\r\n              let Data=[];\r\n              _.uniq(StategyTickerList).map((elem)=>{\r\n                let rowobj={}\r\n                ProductPlatformModelObj.PltfrmModelList.map((innerelem)=>{\r\n                    ProductPlatformModelObj.PltfrmSubModelList[innerelem].map((innermostelem)=>{\r\n\r\n\r\n                             let row_data=_.find(FirmFilteredData,{MODEL_NAME:innerelem,SUB_MODEL_NAME:innermostelem,\r\n                                                        STRATEGY_NAME:elem.split('|')[0],TICKER:elem.split('|')[1]}\r\n                                           )\r\n                            rowobj['Strategy']=elem.split('|')[0];\r\n                            rowobj['Ticker']=elem.split('|')[1];\r\n                            if(row_data==undefined){\r\n                                rowobj[innerelem+\" \"+innermostelem]=0+\"%\";\r\n                            }\r\n                            else{\r\n                                rowobj[innerelem+\" \"+innermostelem]=(Math.floor((row_data.ALLOCATION_PCT)*100))+\"%\";                       \r\n                            }\r\n                            \r\n                            \r\n                           \r\n                })\r\n              })\r\n                    Data.push(rowobj);\r\n                    \r\n              })\r\n\r\n              \r\n              ProductPlatformModelObj.DisplayData=Data;\r\n              //console.log(ProductPlatformModelObj.DisplayData[1])\r\n              \r\n              return  ProductPlatformModelObj\r\n            }\r\n            else{\r\n                return {}\r\n            }\r\n        }\r\n        else {\r\n            const FirmFilteredData=_.where(this.props.srt_p3_5p,{P3_FIRM_NAME_FINAL:firmname})\r\n           \r\n            \r\n            if(FirmFilteredData.length>0){\r\n                \r\n                let row_data=[];\r\n                FirmFilteredData.map((elem)=>{\r\n                    let obj={}\r\n                    const {OPPORTUNITY_TYPE,OPPORTUNITY_NAME,INSIGHT_ORDER,INSIGHTS}=elem\r\n                    obj['OPPORTUNITY_TYPE']= elem['OPPORTUNITY_TYPE'];\r\n                    obj['OPPORTUNITY_NAME']= elem['OPPORTUNITY_NAME'];\r\n                    obj['INSIGHT_ORDER']= elem['INSIGHT_ORDER'];\r\n                    obj['INSIGHTS']= elem['INSIGHTS'];\r\n                    row_data.push(obj)\r\n\r\n                })\r\n                return {DisplayData: row_data}\r\n            } \r\n            else{\r\n                return {}\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    clickHandler(e){\r\n        const OutputTable=this.TableDisplayData(this.props.SelectedFirm,e.target.value,this.props.SelectedRadioButton);\r\n        let asofdate=\"As of Date :\"+\" \"+(this.props.srt_p3_5p[0]['AS_OF_DATE']).substring(4,6)+\"/\"+(this.props.srt_p3_5p[0]['AS_OF_DATE']).substring(0,4)\r\n        if(e.target.value=='Products by Platform'){\r\n            \r\n            this.setState({\r\n                \r\n                 PlatformInd: true,\r\n                 ModelInd:false,\r\n                 InsightInd: false,\r\n                 ViewCategory:e.target.value,\r\n                 ProductPlatformView: OutputTable\r\n            })\r\n            this.props.DisplayRadioButton('Y',\"\")\r\n        }\r\n        else if(e.target.value=='Products by Model'){\r\n            \r\n            this.setState({\r\n                \r\n                PlatformInd: false,\r\n                ModelInd: true,\r\n                InsightInd:false,\r\n                ViewCategory:e.target.value,\r\n                ProductModelView: OutputTable\r\n           })\r\n           this.props.DisplayRadioButton('Y',\"\")\r\n\r\n        }\r\n        else{\r\n            this.setState({\r\n                \r\n                PlatformInd: false,\r\n                ModelInd: false,\r\n                InsightInd:true,\r\n                ViewCategory:e.target.value,\r\n                InsightView: OutputTable\r\n           })   \r\n           this.props.DisplayRadioButton('N',asofdate)\r\n           \r\n        }\r\n    }\r\n\r\n   \r\n\r\n\r\n    render() {\r\n        return (\r\n              <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 col-md-offset-1\">\r\n                         <button id={this.state.PlatformInd ? \"Platform\": \"NotClicked\"} value=\"Products by Platform\"  onClick={(e)=>this.clickHandler(e)}>Products by Platform</button>  \r\n                     </div>\r\n                     <div className=\"col-md-3 col-md-offset-1\">\r\n                         <button id={this.state.ModelInd ? \"Model\": \"NotClicked\"} value=\"Products by Model\" onClick={(e)=>this.clickHandler(e)}>Products by Model</button>  \r\n                     </div>\r\n                     <div className=\"col-md-3 col-md-offset-1\">\r\n                         <button id={this.state.InsightInd  ? \"Insight\": \"NotClicked\"} value=\"5P Insights\" onClick={(e)=>this.clickHandler(e)}>5P Insights</button>  \r\n                     </div>\r\n                </div>\r\n                <p>{this.props.SelectedFirm}</p>\r\n                \r\n                \r\n                <TableDisplay ProductPlatformView={this.state.ProductPlatformView} ProductModelView={this.state.ProductModelView}\r\n                              InsightView={this.state.InsightView} \r\n                              ViewCategory={this.state.ViewCategory} SelectedFirm={this.props.SelectedFirm}></TableDisplay>\r\n                \r\n\r\n            </div>\r\n            \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default TableSelector;","import React, { Component } from 'react';\r\nimport './CustomStylesheet.css';\r\nimport * as _ from 'underscore';\r\nimport * as Forge from 'data-forge';\r\nimport TableSelector from './TableSelector';\r\n\r\nclass NAVBar extends Component {\r\n    \r\n    RadioButtonSelection=['All','ETF','Mutual Fund','SMA']\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            SelectedFirm: this.props.DropDownList[0],\r\n            srtcontactname: this.contactdisplay(this.props.DropDownList[0]),\r\n            srt_p3_tool: this.props.srt_p3_tool,\r\n            srt_p3_model: this.props.srt_p3_model,\r\n            srt_p3_5p: this.props.srt_p3_5p,\r\n            RadioButtonSelectionDisplayInd: 'Y',\r\n            SelectedRadioButton:this.RadioButtonSelection[0],\r\n            ASOFDATE:\"\"\r\n        }\r\n        \r\n    }\r\n\r\n    contactdisplay=(firmname)=>\r\n    {\r\n        if(this.props.DropDownList[0]!=undefined){\r\n           const {NAM_NAME,IPD_NAME}= _.find(this.props.srt_p3_tool,{FIRM:firmname}) \r\n          \r\n           if(NAM_NAME.trim().length>0 && IPD_NAME.trim().length>0 ) {\r\n              return NAM_NAME+'|'+IPD_NAME \r\n           }\r\n           else if(NAM_NAME.trim().length>0){\r\n            return NAM_NAME\r\n           }\r\n           else if(IPD_NAME.trim().length>0){\r\n            return IPD_NAME\r\n           }\r\n           else{\r\n             return \"  \"\r\n           }\r\n        }\r\n    }\r\n\r\n    \r\n    SelectDropDown=this.props.DropDownList.map(\r\n                    (firm)=><option className=\"options\" key={firm} value={firm}>{firm}</option>\r\n                    );\r\n    /*\r\n    SelectRadiobutton=this.RadioButtonSelection.map((bval)=>{return (\r\n                        <div className=\"col\"> \r\n                             <input key={bval} type=\"radio\" value={bval} />{bval}\r\n                        </div>\r\n                            )\r\n                         }\r\n                        );\r\n    */\r\n    DisplayRadioButton=(indicator,value)=>{\r\n\r\n                this.setState({RadioButtonSelectionDisplayInd: indicator,ASOFDATE:value},()=>{console.log(this.state.ASOFDATE)})\r\n    }\r\n\r\n    RadioButtonChange=event=>{\r\n        \r\n        this.setState({SelectedRadioButton:event.target.value})\r\n    }\r\n    \r\n    \r\n    handleFirmChange=event=>{\r\n        const srtcontact= _.find(this.props.srt_p3_tool,{FIRM: event.target.value});\r\n      \r\n        let  NAM_NAME=\"\";\r\n        let IPD_NAME=\"\";\r\n        if (srtcontact!=undefined){\r\n             \r\n            NAM_NAME=srtcontact['NAM_NAME'];\r\n            IPD_NAME=srtcontact['IPD_NAME'];\r\n        }\r\n        else{\r\n             NAM_NAME=\" \";\r\n             IPD_NAME=\" \"\r\n        }\r\n        \r\n        \r\n        let srtcontactchange=\"\";\r\n        if(NAM_NAME.trim().length>0 && IPD_NAME.trim().length>0 ) {\r\n            srtcontactchange=NAM_NAME+'|'+IPD_NAME \r\n         }\r\n         else if(NAM_NAME.trim().length>0){\r\n            srtcontactchange=NAM_NAME\r\n         }\r\n         else if(IPD_NAME.trim().length>0){\r\n            srtcontactchange=IPD_NAME\r\n         }\r\n         else{\r\n            srtcontactchange=\" \"\r\n         }\r\n        this.setState({\r\n                                SelectedFirm: event.target.value,\r\n                                srtcontactname:srtcontactchange\r\n                                \r\n                            })\r\n        \r\n        }\r\n    render() {\r\n        return (\r\n        <div>\r\n            <div className=\"row\">\r\n                 \r\n                    <div className=\"col-md-4\">\r\n                     <div className=\"selectdropdown\">\r\n                        <div className=\"row\">\r\n                             <div className=\"col-md-4\">\r\n                                <label id=\"labels\">Firm Selection:</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <select  value={this.state.SelectedFirm} onChange={this.handleFirmChange}>\r\n                                    {this.SelectDropDown}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                 \r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"contactdetails\">\r\n                            <div className=\"row\" id=\"key1\">\r\n                                <div className=\"col-md-4\">\r\n                                    <p id=\"val1\">SRT Contact</p>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" id=\"key2\">\r\n                                <div className=\"col-md-4\">\r\n                                <p id=\"val2\">{this.state.srtcontactname}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                    { this.state.RadioButtonSelectionDisplayInd=='Y' ? (\r\n                                    this.RadioButtonSelection.map((bval)=>{return (\r\n                                        <div className=\"col\"> \r\n                                            <input key={bval} type=\"radio\" value={bval} \r\n                                                checked={this.state.SelectedRadioButton==bval}\r\n                                                    onChange={this.RadioButtonChange} />{bval}\r\n                                        </div>\r\n                                        )\r\n                                        })\r\n                                    \r\n                    ) : (<div className=\"col\"><h1>{this.state.ASOFDATE}</h1></div>)\r\n                     }\r\n                    </div>\r\n\r\n            </div>\r\n            \r\n            <TableSelector SelectedFirm={this.state.SelectedFirm} srt_p3_tool={this.state.srt_p3_tool} srt_p3_model={this.state.srt_p3_model}\r\n                     srt_p3_5p={this.state.srt_p3_5p} SelectedRadioButton={this.state.SelectedRadioButton}\r\n                     DisplayRadioButton={this.DisplayRadioButton}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NAVBar;","import React, { Component } from 'react';\r\nimport NAVBar from './NAVBar'\r\nimport './CustomStylesheet.css'\r\nimport * as d3 from 'd3';\r\nimport p3_tool from './StaticFiles/cda_srt_p3_tool_v.csv';\r\nimport p3_model from './StaticFiles/cda_srt_p3_tool_model_v.csv';\r\nimport p3_5p from './StaticFiles/cda_ipd_p3_5p_v.csv';\r\nimport * as _ from 'underscore';\r\nimport { forceCenter } from 'd3';\r\n\r\n\r\n\r\n\r\nclass TitleBar extends Component {\r\n    \r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            srt_p3_tool: [],\r\n            srt_p3_model: [],\r\n            srt_p3_5p: [],\r\n            drpdwnList:[], \r\n            ASOFDATE:\"\" \r\n            \r\n        }\r\n        \r\n\r\n    }\r\n    \r\n     async componentDidMount(){\r\n        \r\n\r\n         //d3.csv(p3_5p).then( (res)=>{this.setState({srt_p3_5p:res,loaded:true})});\r\n         const res=await  Promise.all([d3.csv(p3_tool),d3.csv(p3_model),d3.csv(p3_5p)]);\r\n         let drpdwn=[];\r\n         let contlist=[];\r\n          res[0].map((elem)=>{\r\n             const {FIRM}=elem;\r\n         \r\n             drpdwn.push(FIRM);\r\n         });\r\n         res[1].map((elem)=>{\r\n            const {FIRM_NAME}=elem;\r\n        \r\n            drpdwn.push(FIRM_NAME);\r\n        });\r\n        res[2].map((elem)=>{\r\n            const {P3_FIRM_NAME_FINAL}=elem;\r\n        \r\n            drpdwn.push(P3_FIRM_NAME_FINAL);\r\n        });\r\n       \r\n         const uniqdrpdwn=_.uniq(drpdwn).sort();\r\n         const {NAM_NAME,IPD_NAME}=res[0][0];\r\n         \r\n         this.setState({srt_p3_tool:res[0],srt_p3_model:res[1], \r\n                        srt_p3_5p:res[2],loaded:true,drpdwnList:uniqdrpdwn,\r\n                        srtcontactname:NAM_NAME+\"|\"+IPD_NAME\r\n                        });\r\n\r\n                        \r\n        \r\n\r\n     }\r\n   \r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"conatiner\">\r\n                  <div className=\"customDiv\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-5\">\r\n                            <h4>FRANKLIN</h4>\r\n                            <h4>TEMPLETON</h4>\r\n                        </div>\r\n                        <div className=\"col-md-7\">\r\n                            <h1>P3 - Product Platform Presence</h1>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                   \r\n                { this.state.loaded ? (\r\n                        <div>\r\n                            <div className=\"navigation\">\r\n                                    <NAVBar DropDownList={this.state.drpdwnList} \r\n                                    srt_p3_tool={this.state.srt_p3_tool} \r\n                                    srt_p3_model={this.state.srt_p3_model}\r\n                                     srt_p3_5p={this.state.srt_p3_5p}\r\n                                     ></NAVBar>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                            ) : (<div>Loading</div>)}\r\n \r\n          </div>      \r\n        );\r\n    }\r\n}\r\n\r\nexport default TitleBar;","\nimport './App.css';\nimport TitleBar from './components/TitleBar'\n\n\nimport React from 'react';\n\nfunction App() {\n  \n  return (\n    <div>\n        <TitleBar />\n    </div>\n  )\n}\n\n//export default App;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './Bootstrap-min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/cda_srt_p3_tool_v.eb44f158.csv\";","module.exports = __webpack_public_path__ + \"static/media/cda_srt_p3_tool_model_v.e3840345.csv\";","module.exports = __webpack_public_path__ + \"static/media/cda_ipd_p3_5p_v.73b8a6f7.csv\";"],"sourceRoot":""}