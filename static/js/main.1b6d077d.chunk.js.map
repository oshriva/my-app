{"version":3,"sources":["components/logo2.png","components/TableDisplay.js","components/TableSelector.js","components/NAVBar.js","components/TitleBar.js","components/Table.js","App.js","serviceWorker.js","index.js","components/StaticFiles/cda_srt_p3_tool_v.csv","components/StaticFiles/cda_srt_p3_tool_model_v.csv","components/StaticFiles/cda_ipd_p3_5p_v.csv"],"names":["module","exports","TableDisplay","props","Object","keys","this","ProductPlatformView","length","ViewCategory","striped","hover","data","DisplayData","version","pagination","row","tdStyle","whiteSpace","wordWrap","rowSpan","dataField","width","isKey","PltfrmNmList","map","elem","index","colSpan","className","thStyle","datalkp","PltfrmTypList","dataFormat","cell","ProductModelView","PltfrmModelList","PltfrmSubModelList","PltfrmColumnList","split","InsightView","Component","TableSelector","TableDisplayData","firmname","viewcategory","radiobutton","FirmFilteredData","_","srt_p3_tool","FIRM","INVESTMENT_TYPE","PLATFORM_NAME_LIST","PLATFORM_TYPE_LIST","STRATEGY_LIST","PLATFORM_NAME","STRATEGY","PLATFORM_TYPE","push","trim","obj","Data","ProductPlatformViewObj","StrtgyList","SelectedCategory","obj_data","innerelem","srt_p3_model","FIRM_NAME","PRODUCT_TYPE","ModelNameList","SubModelList","StrategyList","TickerList","StategyTickerList","columnlist","MODEL_NAME","TICKER","STRATEGY_NAME","SUB_MODEL","e","splitword","innerlist","SUB_MODEL_NAME","indexfinal","ProductPlatformModelObj","PltfrmStrategyList","PltformTickerList","PltfrmStrategyTickerList","rowobj","innermostelem","row_data","undefined","Math","floor","ALLOCATION_PCT","srt_p3_5p","P3_FIRM_NAME_FINAL","OPPORTUNITY_TYPE","OPPORTUNITY_NAME","INSIGHT_ORDER","INSIGHTS","state","PlatformInd","ModelInd","InsightInd","SelectedFirm","SelectedRadioButton","prevProps","setState","OutputTable","target","value","asofdate","substring","DisplayRadioButton","id","onClick","clickHandler","NAVBar","RadioButtonSelection","contactdisplay","DropDownList","NAM_NAME","IPD_NAME","SelectDropDown","firm","key","SelectRadiobutton","bval","type","indicator","RadioButtonSelectionDisplayInd","ASOFDATE","console","log","RadioButtonChange","event","handleFirmChange","srtcontact","srtcontactchange","srtcontactname","onChange","checked","TitleBar","drpdwnList","Promise","all","d3","p3_tool","p3_model","p3_5p","res","drpdwn","uniqdrpdwn","sort","loaded","logo","require","src","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1b6d077d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.85a6ae47.png\";","import React, { Component } from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport * as d3 from 'd3';\r\nimport {BootstrapTable,TableHeaderColumn} from 'react-bootstrap-table'\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\n\r\n\r\n\r\nclass TableDisplay extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n\r\n\r\n\r\n    }\r\n/*\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n\r\n        if (this.props.SelectedFirm != prevProps.SelectedFirm) {\r\n\r\n          this.setState({SelectedFirm: this.props.SelectedFirm,ProductPlatformView:this.props.ProductPlatformView})\r\n        }\r\n      }\r\n*/\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if (Object.keys(this.props.ProductPlatformView).length>0  && this.props.ViewCategory=='Products by Platform'){\r\n            //console.log(this.props.ProductPlatformView)\r\n            return (\r\n\r\n            <div>\r\n               <BootstrapTable striped  hover\r\n\r\n            data={this.props.ProductPlatformView.DisplayData} version='4' pagination>\r\n\r\n                    <TableHeaderColumn row='0' tdStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }} rowSpan='2' dataField='Strategy' width=\"220\"  isKey>Strategy</TableHeaderColumn>\r\n\r\n                    {this.props.ProductPlatformView.PltfrmNmList.map((elem,index)=>{\r\n                                //console.log(this.props.ProductPlatformView.PltfrmNmList)\r\n                                    return (\r\n\r\n                                            <TableHeaderColumn row='0' width=\"150\" colSpan='1' className=\"Header\" thStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }}>{this.props.ProductPlatformView.PltfrmNmList[index]}</TableHeaderColumn>\r\n\r\n\r\n                                        )}\r\n                                    )\r\n                  }\r\n                    {this.props.ProductPlatformView.PltfrmNmList.map((elem,index)=>{\r\n                                const datalkp=this.props.ProductPlatformView.PltfrmNmList[index]+\" \"+this.props.ProductPlatformView.PltfrmTypList[index]\r\n                                //this.props.ProductPlatformView.DisplayData\r\n\r\n\r\n                             return (\r\n\r\n\r\n                                    <TableHeaderColumn row='1'  width=\"150\" thStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }} dataField={datalkp} dataFormat={(cell, row)=>{if(cell==true){return <span className=\"trueDisp\">Yes</span>} return cell;}} >{this.props.ProductPlatformView.PltfrmTypList[index]}</TableHeaderColumn>\r\n\r\n                                     )}\r\n                             )\r\n                    }\r\n               </BootstrapTable>\r\n\r\n            </div>\r\n        )\r\n        }\r\n        else if (Object.keys(this.props.ProductModelView).length>0  && this.props.ViewCategory=='Products by Model'){\r\n               // console.log(this.props.ProductModelView)\r\n            return (\r\n\r\n                <div>\r\n                     <BootstrapTable data={this.props.ProductModelView.DisplayData} version='4' pagination>\r\n\r\n                    <TableHeaderColumn width=\"300\" tdStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }} row='0' rowSpan='2' dataField='Strategy' isKey>Strategy</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"200\" tdStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }} row='0' rowSpan='2' dataField='Ticker' >Ticker</TableHeaderColumn>\r\n\r\n                    {this.props.ProductModelView.PltfrmModelList.map((elem,index)=>{\r\n                                //console.log(this.props.ProductPlatformView.PltfrmNmList)\r\n\r\n                                    return (\r\n\r\n\r\n                                            <TableHeaderColumn tdStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }} row=\"0\" colSpan={this.props.ProductModelView.PltfrmSubModelList[elem].length} className=\"Header\">\r\n                                                {elem}\r\n                                            </TableHeaderColumn>\r\n\r\n\r\n                                        )}\r\n                                    )\r\n                  }\r\n                   {this.props.ProductModelView.PltfrmColumnList.map((elem,index)=>{\r\n                                let datalkp=elem.split(\"|\")[1];\r\n\r\n\r\n\r\n                                    return (\r\n\r\n\r\n                                        <TableHeaderColumn tdStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }} row=\"1\" dataField={datalkp}>{elem.split(\"|\")[2]}</TableHeaderColumn>\r\n\r\n                                         )\r\n\r\n                                })\r\n\r\n                    }\r\n\r\n               </BootstrapTable>\r\n\r\n\r\n\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else if(Object.keys(this.props.InsightView).length>0  && this.props.ViewCategory=='5P Insights'){\r\n\r\n        return (<div>\r\n\r\n                    <BootstrapTable data={this.props.InsightView.DisplayData}  pagination>\r\n                        <TableHeaderColumn width=\"200\" tdStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }} dataField='OPPORTUNITY_TYPE' isKey>OPPORTUNITY_TYPE</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"200\" tdStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }} dataField='OPPORTUNITY_NAME' >OPPORTUNITY_NAME</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"200\" tdStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }} dataField='INSIGHT_ORDER'>INSIGHT_ORDER</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"500\" tdStyle={{ whiteSpace: 'normal', wordWrap: 'break-word' }} dataField='INSIGHTS'>INSIGHTS</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n            </div>\r\n                )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"leftPadding\">\r\n                    <h3 className=\"leftPadding colorT fullWidth\">No Data Exists for Selected Criteria</h3>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default TableDisplay;\r\n","import React, { Component } from 'react';\r\nimport './CustomStylesheet.css';\r\n//import TableDisplay from './TableDisplay';\r\nimport * as _ from 'underscore';\r\nimport TableDisplay from './TableDisplay';\r\nimport {BootstrapTable,TableHeaderColumn} from 'react-bootstrap-table'\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\n\r\n\r\nclass TableSelector extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n            ViewCategory: 'Products by Platform',\r\n            PlatformInd: true,\r\n            ModelInd:false,\r\n            InsightInd:false,\r\n            ProductPlatformView: this.TableDisplayData(this.props.SelectedFirm,'Products by Platform',this.props.SelectedRadioButton),\r\n            ProductModelView: {},\r\n            InsightView:{}\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n\r\n    if (this.props.SelectedFirm != prevProps.SelectedFirm || this.props.SelectedRadioButton != prevProps.SelectedRadioButton ){\r\n\r\n    //if (obj.SelectedCategory != prevProps.SelectedFirm ){\r\n          const obj=this.TableDisplayData(this.props.SelectedFirm,this.state.ViewCategory,this.props.SelectedRadioButton)\r\n\r\n          if(this.state.ViewCategory=='Products by Platform'){\r\n                this.setState({ProductPlatformView:obj})\r\n          }\r\n          else if(this.state.ViewCategory=='Products by Model'){\r\n            this.setState({ProductModelView:obj})\r\n          }\r\n          else{\r\n            this.setState({InsightView:obj})\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n    TableDisplayData=(firmname,viewcategory,radiobutton)=>{\r\n\r\n\r\n\r\n        if(viewcategory=='Products by Platform' ){\r\n            let FirmFilteredData=[]\r\n\r\n            if(radiobutton==\"All\"){\r\n                 FirmFilteredData=_.where(this.props.srt_p3_tool,{FIRM:firmname})\r\n            }\r\n            else{\r\n                FirmFilteredData=_.where(this.props.srt_p3_tool,{FIRM:firmname,INVESTMENT_TYPE:radiobutton})\r\n            }\r\n\r\n            if(FirmFilteredData.length>0){\r\n\r\n            let PLATFORM_NAME_LIST=[];\r\n            let PLATFORM_TYPE_LIST=[];\r\n            let STRATEGY_LIST=[];\r\n            FirmFilteredData.map((elem)=>\r\n                    {\r\n                       const {PLATFORM_NAME,PLATFORM_TYPE,STRATEGY} =elem;\r\n                       PLATFORM_NAME_LIST.push(PLATFORM_NAME.trim());\r\n                       STRATEGY_LIST.push(STRATEGY.trim());\r\n                    }\r\n            )\r\n            _.uniq(PLATFORM_NAME_LIST).map((elem)=>{\r\n                  const obj= _.find(FirmFilteredData,{PLATFORM_NAME:elem})\r\n                  PLATFORM_TYPE_LIST.push(obj.PLATFORM_TYPE)\r\n            })\r\n\r\n\r\n\r\n            let Data=[];\r\n            let ProductPlatformViewObj={\r\n                PltfrmNmList: _.uniq(PLATFORM_NAME_LIST),\r\n                PltfrmTypList : PLATFORM_TYPE_LIST,\r\n                StrtgyList : _.uniq(STRATEGY_LIST),\r\n                SelectedCategory: firmname+viewcategory\r\n            }\r\n            ProductPlatformViewObj.StrtgyList.map((elem)=>{\r\n\r\n                let obj_data={ 'Strategy' : elem}\r\n\r\n                ProductPlatformViewObj.PltfrmNmList.map((innerelem,index)=>{\r\n                    const col_data=_.where(FirmFilteredData,\r\n                                {STRATEGY:elem,PLATFORM_NAME:innerelem,PLATFORM_TYPE:ProductPlatformViewObj.PltfrmTypList[index]})\r\n\r\n                    if(col_data.length>0){\r\n                        obj_data[innerelem+\" \"+ProductPlatformViewObj.PltfrmTypList[index]]= true;\r\n                        //obj_data[index]=true\r\n                        //obj_data[innerelem]=true\r\n\r\n                    }\r\n                    /*else{\r\n                        obj_data[innerelem+\" \"+ProductPlatformViewObj.PltfrmTypList[index]]=false\r\n                       // obj_data[index]=false\r\n                      // obj_data[innerelem]=false\r\n\r\n                    }*/\r\n                })\r\n\r\n              Data.push(obj_data);\r\n\r\n            });\r\n\r\n            ProductPlatformViewObj.DisplayData=Data\r\n\r\n\r\n\r\n            return ProductPlatformViewObj\r\n            }else{\r\n                return {}\r\n            }\r\n\r\n        }\r\n        else if(viewcategory=='Products by Model' ){\r\n            let FirmFilteredData;\r\n            if(radiobutton==\"All\"){\r\n                FirmFilteredData=_.where(this.props.srt_p3_model,{FIRM_NAME:firmname})\r\n           }\r\n           else{\r\n               FirmFilteredData=_.where(this.props.srt_p3_model,{FIRM_NAME:firmname,PRODUCT_TYPE:radiobutton})\r\n           }\r\n\r\n            if(FirmFilteredData.length>0){\r\n\r\n\r\n                let ModelNameList=[];\r\n                let SubModelList={};\r\n                let StrategyList=[];\r\n                let TickerList=[];\r\n                let StategyTickerList=[];\r\n                let columnlist=[];\r\n                FirmFilteredData.map((elem)=>\r\n                {\r\n                   const {MODEL_NAME,TICKER,STRATEGY_NAME,SUB_MODEL} =elem;\r\n\r\n                   StategyTickerList.push(STRATEGY_NAME.trim()+\"|\"+TICKER.trim());\r\n                   ModelNameList.push(MODEL_NAME.trim());\r\n                })\r\n\r\n\r\n                _.uniq(StategyTickerList).map((e)=>{\r\n                   const splitword= e.split('|')\r\n                   StrategyList.push(splitword[0]);\r\n                   TickerList.push(splitword[1]);\r\n\r\n                })\r\n\r\n                _.uniq(ModelNameList).map((elem)=>{\r\n                    const obj= _.where(FirmFilteredData,{MODEL_NAME:elem})\r\n                    let innerlist=[]\r\n                    obj.map((innerelem)=>{\r\n                        const {SUB_MODEL_NAME}=innerelem;\r\n                        innerlist.push(SUB_MODEL_NAME);\r\n                    })\r\n                    SubModelList[elem]=_.uniq(innerlist)\r\n              })\r\n              Object.keys(SubModelList).map((elem,index)=>{\r\n                SubModelList[elem].map((innerelem)=>{\r\n                        let indexfinal=index+1\r\n                        columnlist.push(indexfinal+\"|\"+elem+\" \"+innerelem+\"|\"+innerelem)\r\n                     })\r\n              })\r\n              let ProductPlatformModelObj={\r\n                PltfrmModelList:  _.uniq(ModelNameList),\r\n                PltfrmSubModelList: SubModelList,\r\n                PltfrmStrategyList : StrategyList,\r\n                PltformTickerList : TickerList,\r\n                PltfrmStrategyTickerList:  _.uniq(StategyTickerList),\r\n                PltfrmColumnList:columnlist,\r\n                SelectedCategory: firmname+viewcategory\r\n             }\r\n\r\n              let Data=[];\r\n              _.uniq(StategyTickerList).map((elem)=>{\r\n                let rowobj={}\r\n                ProductPlatformModelObj.PltfrmModelList.map((innerelem)=>{\r\n                    ProductPlatformModelObj.PltfrmSubModelList[innerelem].map((innermostelem)=>{\r\n\r\n\r\n                             let row_data=_.find(FirmFilteredData,{MODEL_NAME:innerelem,SUB_MODEL_NAME:innermostelem,\r\n                                                        STRATEGY_NAME:elem.split('|')[0],TICKER:elem.split('|')[1]}\r\n                                           )\r\n                            rowobj['Strategy']=elem.split('|')[0];\r\n                            rowobj['Ticker']=elem.split('|')[1];\r\n                            if(row_data==undefined){\r\n                                rowobj[innerelem+\" \"+innermostelem]=0+\"%\";\r\n                            }\r\n                            else{\r\n                                rowobj[innerelem+\" \"+innermostelem]=(Math.floor((row_data.ALLOCATION_PCT)*100))+\"%\";\r\n                            }\r\n\r\n\r\n\r\n                })\r\n              })\r\n                    Data.push(rowobj);\r\n\r\n              })\r\n\r\n\r\n              ProductPlatformModelObj.DisplayData=Data;\r\n              //console.log(ProductPlatformModelObj.DisplayData[1])\r\n\r\n              return  ProductPlatformModelObj\r\n            }\r\n            else{\r\n                return {}\r\n            }\r\n        }\r\n        else {\r\n            const FirmFilteredData=_.where(this.props.srt_p3_5p,{P3_FIRM_NAME_FINAL:firmname})\r\n\r\n\r\n            if(FirmFilteredData.length>0){\r\n\r\n                let row_data=[];\r\n                FirmFilteredData.map((elem)=>{\r\n                    let obj={}\r\n                    const {OPPORTUNITY_TYPE,OPPORTUNITY_NAME,INSIGHT_ORDER,INSIGHTS}=elem\r\n                    obj['OPPORTUNITY_TYPE']= elem['OPPORTUNITY_TYPE'];\r\n                    obj['OPPORTUNITY_NAME']= elem['OPPORTUNITY_NAME'];\r\n                    obj['INSIGHT_ORDER']= elem['INSIGHT_ORDER'];\r\n                    obj['INSIGHTS']= elem['INSIGHTS'];\r\n                    row_data.push(obj)\r\n\r\n                })\r\n                return {DisplayData: row_data}\r\n            }\r\n            else{\r\n                return {}\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    clickHandler(e){\r\n        const OutputTable=this.TableDisplayData(this.props.SelectedFirm,e.target.value,this.props.SelectedRadioButton);\r\n        let asofdate=\"As of Date :\"+\" \"+(this.props.srt_p3_5p[0]['AS_OF_DATE']).substring(4,6)+\"/\"+(this.props.srt_p3_5p[0]['AS_OF_DATE']).substring(0,4)\r\n        if(e.target.value=='Products by Platform'){\r\n\r\n            this.setState({\r\n\r\n                 PlatformInd: true,\r\n                 ModelInd:false,\r\n                 InsightInd: false,\r\n                 ViewCategory:e.target.value,\r\n                 ProductPlatformView: OutputTable\r\n            })\r\n            this.props.DisplayRadioButton('Y',\"\")\r\n        }\r\n        else if(e.target.value=='Products by Model'){\r\n\r\n            this.setState({\r\n\r\n                PlatformInd: false,\r\n                ModelInd: true,\r\n                InsightInd:false,\r\n                ViewCategory:e.target.value,\r\n                ProductModelView: OutputTable\r\n           })\r\n           this.props.DisplayRadioButton('Y',\"\")\r\n\r\n        }\r\n        else{\r\n            this.setState({\r\n\r\n                PlatformInd: false,\r\n                ModelInd: false,\r\n                InsightInd:true,\r\n                ViewCategory:e.target.value,\r\n                InsightView: OutputTable\r\n           })\r\n           this.props.DisplayRadioButton('N',asofdate)\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n              <div className=\"container\">\r\n\r\n              <div className=\"leftPadding\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-3 col-md-offset-1\">\r\n                         <button id={this.state.PlatformInd ? \"Platform\": \"NotClicked\"} value=\"Products by Platform\"  onClick={(e)=>this.clickHandler(e)}>Products by Platform</button>\r\n                     </div>\r\n                     <div className=\"col-md-3 col-md-offset-1\">\r\n                         <button id={this.state.ModelInd ? \"Model\": \"NotClicked\"} value=\"Products by Model\" onClick={(e)=>this.clickHandler(e)}>Products by Model</button>\r\n                     </div>\r\n                     <div className=\"col-md-3 col-md-offset-1\">\r\n                         <button id={this.state.InsightInd  ? \"Insight\": \"NotClicked\"} className=\"fullHeight\" value=\"5P Insights\" onClick={(e)=>this.clickHandler(e)}>5P Insights</button>\r\n                     </div>\r\n                </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row addTopPad\">\r\n\r\n                    <TableDisplay ProductPlatformView={this.state.ProductPlatformView} ProductModelView={this.state.ProductModelView}\r\n                              InsightView={this.state.InsightView}\r\n                              ViewCategory={this.state.ViewCategory} SelectedFirm={this.props.SelectedFirm}></TableDisplay>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableSelector;\r\n","import React, { Component } from 'react';\r\nimport './CustomStylesheet.css';\r\nimport * as _ from 'underscore';\r\nimport * as Forge from 'data-forge';\r\nimport TableSelector from './TableSelector';\r\n\r\nclass NAVBar extends Component {\r\n\r\n    RadioButtonSelection=['All','ETF','Mutual Fund','SMA']\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            SelectedFirm: this.props.DropDownList[0],\r\n            srtcontactname: this.contactdisplay(this.props.DropDownList[0]),\r\n            srt_p3_tool: this.props.srt_p3_tool,\r\n            srt_p3_model: this.props.srt_p3_model,\r\n            srt_p3_5p: this.props.srt_p3_5p,\r\n            RadioButtonSelectionDisplayInd: 'Y',\r\n            SelectedRadioButton:this.RadioButtonSelection[0],\r\n            ASOFDATE:\"\"\r\n        }\r\n\r\n    }\r\n\r\n    contactdisplay=(firmname)=>\r\n    {\r\n        if(this.props.DropDownList[0]!=undefined){\r\n           const {NAM_NAME,IPD_NAME}= _.find(this.props.srt_p3_tool,{FIRM:firmname})\r\n\r\n           if(NAM_NAME.trim().length>0 && IPD_NAME.trim().length>0 ) {\r\n              return NAM_NAME+'|'+IPD_NAME\r\n           }\r\n           else if(NAM_NAME.trim().length>0){\r\n            return NAM_NAME\r\n           }\r\n           else if(IPD_NAME.trim().length>0){\r\n            return IPD_NAME\r\n           }\r\n           else{\r\n             return \"  \"\r\n           }\r\n        }\r\n    }\r\n\r\n\r\n    SelectDropDown=this.props.DropDownList.map(\r\n                    (firm)=><option className=\"options\" key={firm} value={firm}>{firm}</option>\r\n                    );\r\n\r\n    SelectRadiobutton=this.RadioButtonSelection.map((bval)=>{return (\r\n                        <div className=\"col\">\r\n                             <input key={bval} type=\"radio\" value={bval} />{bval}\r\n                        </div>\r\n                            )\r\n                         }\r\n                        );\r\n    DisplayRadioButton=(indicator,value)=>{\r\n\r\n                this.setState({RadioButtonSelectionDisplayInd: indicator,ASOFDATE:value},()=>{console.log(this.state.ASOFDATE)})\r\n    }\r\n\r\n    RadioButtonChange=event=>{\r\n\r\n        this.setState({SelectedRadioButton:event.target.value})\r\n    }\r\n\r\n\r\n    handleFirmChange=event=>{\r\n        const srtcontact= _.find(this.props.srt_p3_tool,{FIRM: event.target.value});\r\n\r\n        let  NAM_NAME=\"\";\r\n        let IPD_NAME=\"\";\r\n        if (srtcontact!=undefined){\r\n\r\n            NAM_NAME=srtcontact['NAM_NAME'];\r\n            IPD_NAME=srtcontact['IPD_NAME'];\r\n        }\r\n        else{\r\n             NAM_NAME=\" \";\r\n             IPD_NAME=\" \"\r\n        }\r\n\r\n\r\n        let srtcontactchange=\"\";\r\n        if(NAM_NAME.trim().length>0 && IPD_NAME.trim().length>0 ) {\r\n            srtcontactchange=NAM_NAME+'|'+IPD_NAME\r\n         }\r\n         else if(NAM_NAME.trim().length>0){\r\n            srtcontactchange=NAM_NAME\r\n         }\r\n         else if(IPD_NAME.trim().length>0){\r\n            srtcontactchange=IPD_NAME\r\n         }\r\n         else{\r\n            srtcontactchange=\" \"\r\n         }\r\n        this.setState({\r\n                                SelectedFirm: event.target.value,\r\n                                srtcontactname:srtcontactchange\r\n\r\n                            })\r\n\r\n        }\r\n    render() {\r\n        return (\r\n        <div>\r\n            <div className=\"row\">\r\n\r\n                    <div className=\"col-md-4\">\r\n                     <div className=\"selectdropdown\">\r\n                        <div className=\"row\">\r\n                             <div className=\"col-md-12\">\r\n                                <div className=\"labels\"> <b>Firm Selection </b></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n\r\n                                <select className=\"colElement\" value={this.state.SelectedFirm} onChange={this.handleFirmChange}>\r\n                                    {this.SelectDropDown}\r\n                                </select>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                    <div className=\"col-md-4 contactdetails\">\r\n\r\n                            <div className=\"row\" id=\"key1\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div id=\"val1\">SRT Contact</div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" id=\"key2\">\r\n                                <div className=\"col-md-12\">\r\n                                <center><div id=\"val2\">{this.state.srtcontactname}</div></center>\r\n                                </div>\r\n                            </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4\">\r\n                  <center>  { this.state.RadioButtonSelectionDisplayInd=='Y' ? (\r\n                                    this.RadioButtonSelection.map((bval)=>{return (\r\n                                        <div className=\"radioAlign\">\r\n                                            <input key={bval} type=\"radio\" value={bval}\r\n                                                checked={this.state.SelectedRadioButton==bval}\r\n                                                    onChange={this.RadioButtonChange} />{bval}\r\n                                        </div>\r\n                                        )\r\n                                        })\r\n\r\n                    ) : (<div className=\"col\"><div>{this.state.ASOFDATE}</div></div>)\r\n                  }</center>\r\n                    </div>\r\n\r\n            </div>\r\n            <div className=\"row addTopPad\">\r\n            <TableSelector SelectedFirm={this.state.SelectedFirm} srt_p3_tool={this.state.srt_p3_tool} srt_p3_model={this.state.srt_p3_model}\r\n                     srt_p3_5p={this.state.srt_p3_5p} SelectedRadioButton={this.state.SelectedRadioButton}\r\n                     DisplayRadioButton={this.DisplayRadioButton}/>\r\n                     </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NAVBar;\r\n","import React, { Component } from 'react';\r\nimport NAVBar from './NAVBar'\r\nimport './CustomStylesheet.css'\r\nimport * as d3 from 'd3';\r\nimport p3_tool from './StaticFiles/cda_srt_p3_tool_v.csv';\r\nimport p3_model from './StaticFiles/cda_srt_p3_tool_model_v.csv';\r\nimport p3_5p from './StaticFiles/cda_ipd_p3_5p_v.csv';\r\nimport * as _ from 'underscore';\r\nimport { forceCenter } from 'd3';\r\n//import {logo} from './logo.png';\r\n\r\n\r\n\r\n\r\nclass TitleBar extends Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            srt_p3_tool: [],\r\n            srt_p3_model: [],\r\n            srt_p3_5p: [],\r\n            drpdwnList:[],\r\n            ASOFDATE:\"\"\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n     async componentDidMount(){\r\n\r\n\r\n         //d3.csv(p3_5p).then( (res)=>{this.setState({srt_p3_5p:res,loaded:true})});\r\n         const res=await  Promise.all([d3.csv(p3_tool),d3.csv(p3_model),d3.csv(p3_5p)]);\r\n         let drpdwn=[];\r\n         let contlist=[];\r\n          res[0].map((elem)=>{\r\n             const {FIRM}=elem;\r\n\r\n             drpdwn.push(FIRM);\r\n         });\r\n         res[1].map((elem)=>{\r\n            const {FIRM_NAME}=elem;\r\n\r\n            drpdwn.push(FIRM_NAME);\r\n        });\r\n        res[2].map((elem)=>{\r\n            const {P3_FIRM_NAME_FINAL}=elem;\r\n\r\n            drpdwn.push(P3_FIRM_NAME_FINAL);\r\n        });\r\n\r\n         const uniqdrpdwn=_.uniq(drpdwn).sort();\r\n         const {NAM_NAME,IPD_NAME}=res[0][0];\r\n\r\n         this.setState({srt_p3_tool:res[0],srt_p3_model:res[1],\r\n                        srt_p3_5p:res[2],loaded:true,drpdwnList:uniqdrpdwn,\r\n                        srtcontactname:NAM_NAME+\"|\"+IPD_NAME\r\n                        });\r\n\r\n\r\n\r\n\r\n     }\r\n\r\n    render() {\r\n        const logo = require('./logo2.png');\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"conatiner\">\r\n                  <div className=\"customDiv\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-5\">\r\n                          <img src={logo} className=\"logo\"/>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-7\">\r\n                            <h3>P3 - Product Platform Presence</h3>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                { this.state.loaded ? (\r\n                        <div>\r\n                            <div className=\"navigation\">\r\n                                    <NAVBar DropDownList={this.state.drpdwnList}\r\n                                    srt_p3_tool={this.state.srt_p3_tool}\r\n                                    srt_p3_model={this.state.srt_p3_model}\r\n                                     srt_p3_5p={this.state.srt_p3_5p}\r\n                                     ></NAVBar>\r\n                            </div>\r\n\r\n                        </div>\r\n                            ) : (<div>Loading</div>)}\r\n\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TitleBar;\r\n","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table-v6';\r\nimport InteractiveTable from 'react-interactive-table';\r\nimport 'react-table-v6/react-table.css';\r\nimport './CustomStylesheet.css';\r\n//import BootstrapTable from 'react-bootstrap-table-next';\r\n//import paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport {BootstrapTable,TableHeaderColumn} from 'react-bootstrap-table'\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\n\r\nclass Table extends Component {\r\n    \r\n    render() {\r\n        const products=[{Strategy:'je'}]\r\n        //[{id:1,name:'Soap',price:'100'},{id:2 ,name:'Soap',price:'100'}]\r\n        \r\n        return (\r\n            <div> \r\n            <BootstrapTable data={ products } pagination>\r\n                    <TableHeaderColumn row='0' rowSpan='2' dataField='Strategy' isKey>ID</TableHeaderColumn>\r\n                    <TableHeaderColumn row='0' colSpan='1' className=\"Header\" dataField='Strategy'>Product</TableHeaderColumn>\r\n                    \r\n                   \r\n          </BootstrapTable>\r\n\r\n          <BootstrapTable data={ products } version='4'>\r\n                    <TableHeaderColumn row='0' rowSpan='2' dataField='Strategy' isKey>ID</TableHeaderColumn>\r\n                    <TableHeaderColumn row='0' colSpan='1' className=\"Header\">Product</TableHeaderColumn>\r\n                    <TableHeaderColumn row='1' dataField='name'>Name</TableHeaderColumn>\r\n                    <TableHeaderColumn row='0' colSpan='1' className=\"Header\">Product</TableHeaderColumn>\r\n                    <TableHeaderColumn row='1' dataField='name'>Name</TableHeaderColumn>\r\n                    <TableHeaderColumn row='0' colSpan='1' className=\"Header\">Product</TableHeaderColumn>\r\n                    <TableHeaderColumn row='1' dataField='name'>Name</TableHeaderColumn>\r\n                    <TableHeaderColumn row='0' colSpan='1' className=\"Header\">Product</TableHeaderColumn>\r\n                    <TableHeaderColumn row='1' dataField='name'>Name</TableHeaderColumn>\r\n                    <TableHeaderColumn row='0' colSpan='1' className=\"Header\">Product</TableHeaderColumn>\r\n                    <TableHeaderColumn row='1' dataField='name'>Name</TableHeaderColumn>\r\n                    <TableHeaderColumn row='0' colSpan='1' className=\"Header\">Product</TableHeaderColumn>\r\n                    <TableHeaderColumn row='1' dataField='name'>Name</TableHeaderColumn>\r\n                   \r\n          </BootstrapTable>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table;","\nimport './App.css';\nimport TitleBar from './components/TitleBar'\n//import Parent from './components/Parent'\nimport Table from './components/Table'\n\nimport React from 'react';\n\nfunction App() {\n  \n  return (\n    <div>\n        <TitleBar />\n    </div>\n  )\n}\n\n//export default App;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './Bootstrap-min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/cda_srt_p3_tool_v.eb44f158.csv\";","module.exports = __webpack_public_path__ + \"static/media/cda_srt_p3_tool_model_v.e3840345.csv\";","module.exports = __webpack_public_path__ + \"static/media/cda_ipd_p3_5p_v.73b8a6f7.csv\";"],"sourceRoot":""}